name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/ghactions
          chmod 600 ~/.ssh/ghactions
          # Очистка устаревших ключей
          ssh-keygen -R ${{ secrets.HOST }} || true
          # Добавление ключа сервера
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts || true

      - name: Deploy application
        run: |
          ssh -v -i ~/.ssh/ghactions ${{ secrets.DEPLOY_USER }}@${{ secrets.HOST }} << EOF
          set -e
          echo "Starting connection..."
          mkdir -p ${{ secrets.DEPLOY_PATH }}
          sudo chown ${{ secrets.DEPLOY_USER }}:${{ secrets.DEPLOY_USER }} ${{ secrets.DEPLOY_PATH }}
          cd ${{ secrets.DEPLOY_PATH }}
          if [ ! -d ".git" ]; then
            echo "Initializing new Git repository for ${{ secrets.REPOSITORY_URL }}"
            git init
            git remote add origin ${{ secrets.REPOSITORY_URL }}
            git pull origin main
          else
            echo "Git repository ${{ secrets.REPOSITORY_URL }} found, pulling latest changes..."
            git pull origin main
          fi
          DB_USER=${{ secrets.DB_USER }} \
          DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
          DB_NAME=${{ secrets.DB_NAME }} \
          docker compose down
          DB_USER=${{ secrets.DB_USER }} \
          DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
          DB_NAME=${{ secrets.DB_NAME }} \
          docker compose up -d --build
          echo "Finishing connection..."
          sleep 10
          exit
          EOF

